package com.bonade.xxp.xqc_android_im.DB.entity;

import org.greenrobot.greendao.annotation.*;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here

import android.text.TextUtils;

import com.bonade.xxp.xqc_android_im.config.DBConstant;
import com.bonade.xxp.xqc_android_im.imservice.entity.SearchElement;
import com.bonade.xxp.xqc_android_im.util.pinyin.PinYin;

import org.greenrobot.greendao.annotation.NotNull;
// KEEP INCLUDES END

/**
 * Entity mapped to table "UserInfo".
 */
public class UserEntity extends PeerEntity {

    private Integer gender;

    /**
     * Not-null value.
     */
    private String pinyinName;

    /**
     * Not-null value.
     */
    private String realName;

    /**
     * Not-null value.
     */
    private String phone;

    /**
     * Not-null value.
     */
    private String email;
    private Integer departmentId;
    private Integer status;

    private Integer isFriend;
    private String area;
    private String momentcover;

    // KEEP FIELDS - put your custom fields here
    private PinYin.PinYinElement pinyinElement = new PinYin.PinYinElement();
    private SearchElement searchElement = new SearchElement();
    // KEEP FIELDS END

    public UserEntity() {
    }

    public UserEntity(Long id) {
        this.id = id;
    }

    public UserEntity(Long id, int peerId, Integer gender, String mainName, String pinyinName, String realName, String avatar, String phone, String email, Integer departmentId, Integer status, Integer isFriend, String area, String momentcover, Integer created, Integer updated) {
        this.id = id;
        this.peerId = peerId;
        this.gender = gender;
        this.mainName = mainName;
        this.pinyinName = pinyinName;
        this.realName = realName;
        this.avatar = avatar;
        this.phone = phone;
        this.email = email;
        this.departmentId = departmentId;
        this.status = status;
        this.isFriend = isFriend;
        this.area = area;
        this.momentcover = momentcover;
        this.created = created;
        this.updated = updated;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public int getPeerId() {
        return peerId;
    }

    public void setPeerId(int peerId) {
        this.peerId = peerId;
    }

    public Integer getGender() {
        return gender;
    }

    public void setGender(Integer gender) {
        this.gender = gender;
    }

    public String getMainName() {
        return mainName;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setMainName(@NotNull String mainName) {
        this.mainName = mainName;
    }

    public String getPinyinName() {
        return pinyinName;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setPinyinName(@NotNull String pinyinName) {
        this.pinyinName = pinyinName;
    }

    public String getRealName() {
        return realName;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setRealName(@NotNull String realName) {
        this.realName = realName;
    }

    public String getAvatar() {
        return avatar;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setAvatar(@NotNull String avatar) {
        this.avatar = avatar;
    }

    public String getPhone() {
        return phone;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setPhone(@NotNull String phone) {
        this.phone = phone;
    }

    public String getEmail() {
        return email;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setEmail(@NotNull String email) {
        this.email = email;
    }

    public Integer getDepartmentId() {
        return departmentId;
    }

    public void setDepartmentId(Integer departmentId) {
        this.departmentId = departmentId;
    }

    public Integer getStatus() {
        return status;
    }

    public void setStatus(Integer status) {
        this.status = status;
    }

    public Integer getIsFriend() {
        return isFriend;
    }

    public void setIsFriend(Integer isFriend) {
        this.isFriend = isFriend;
    }

    public String getArea() {
        return area;
    }

    public void setArea(String area) {
        this.area = area;
    }

    public String getMomentcover() {
        return momentcover;
    }

    public void setMomentcover(String momentcover) {
        this.momentcover = momentcover;
    }

    public int getCreated() {
        return created;
    }

    public void setCreated(Integer created) {
        this.created = created;
    }

    public int getUpdated() {
        return updated;
    }

    public void setUpdated(Integer updated) {
        this.updated = updated;
    }

    // KEEP METHODS - put your custom methods here

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof UserEntity)) return false;

        UserEntity entity = (UserEntity) o;

        if (departmentId != entity.departmentId) return false;
        if (gender != entity.gender) return false;
        if (peerId != entity.peerId) return false;
        if (status != entity.status) return false;
        if (avatar != null ? !avatar.equals(entity.avatar) : entity.avatar != null) return false;
        if (email != null ? !email.equals(entity.email) : entity.email != null) return false;
        if (mainName != null ? !mainName.equals(entity.mainName) : entity.mainName != null)
            return false;
        if (phone != null ? !phone.equals(entity.phone) : entity.phone != null) return false;
        if (pinyinName != null ? !pinyinName.equals(entity.pinyinName) : entity.pinyinName != null)
            return false;
        if (realName != null ? !realName.equals(entity.realName) : entity.realName != null)
            return false;

        return true;
    }

    @Override
    public int hashCode() {
        int result = peerId;
        result = 31 * result + gender;
        result = 31 * result + (mainName != null ? mainName.hashCode() : 0);
        result = 31 * result + (pinyinName != null ? pinyinName.hashCode() : 0);
        result = 31 * result + (realName != null ? realName.hashCode() : 0);
        result = 31 * result + (avatar != null ? avatar.hashCode() : 0);
        result = 31 * result + (phone != null ? phone.hashCode() : 0);
        result = 31 * result + (email != null ? email.hashCode() : 0);
        result = 31 * result + departmentId;
        result = 31 * result + status;
        return result;
    }

    public PinYin.PinYinElement getPinyinElement() {
        return pinyinElement;
    }


    public SearchElement getSearchElement() {
        return searchElement;
    }

    public String getSectionName() {
        if (TextUtils.isEmpty(pinyinElement.pinyin)) {
            return "";
        }
        return pinyinElement.pinyin.substring(0, 1);
    }

    @Override
    public int getType() {
        return DBConstant.SESSION_TYPE_SINGLE;
    }
    // KEEP METHODS END

}
